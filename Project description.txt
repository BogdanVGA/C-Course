The goal of the project is to implement a C declaration parser that will translate declarations into
human readable form.

Input example: char sortToken(char *string)
Output example: declare sortToken as a function taking pointer to char returning char

More examples:
int *foo -> Declare foo as pointer to int

int *foo[5] -> Declare foo as array 5 of pointer to int


int (*foo)[5] -> Declare foo as pointer to array 5 of int


int *(*foo)[5] -> Declare foo as pointer to array 5 of pointer to int


int foo()[5] -> Declare foo as function (void) returning array 5 of int


int *(*foo)(char *) -> Declare foo as pointer to function (pointer to char) returning pointer to int


int *(*foo[5])(char *) -> Declare foo as array 5 of pointer to function (pointer to char) returning pointer to int


int *(*(*foo[5])(char *))[5] -> Declare foo as array 5 of pointer to function (pointer to char) returning pointer to array 5 of pointer to int
